import Gaffer
import GafferOSL
import IECore
import imath
import os

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "acesCG", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "output1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["mode"] = Gaffer.IntPlug( "mode", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["mode"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["color"] = Gaffer.Color3fPlug( "color", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["color"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["OSLCode"]["parameters"]["acesCG"].setInput( __children["mode"] )
__children["OSLCode"]["code"].setValue( '// Returns a value in the range 0 to 1.\n// 0 indicates the x,y point is outside the square, and\n// 1 indicates the x,y point is fully within the squere. \nfloat pntInSquare(float x,\n                  float y,\n                  float x_center,\n                  float y_center,\n                  float x_width,\n                  float y_width,\n                  float blur)\n{\nfloat minx = x_center - x_width/2;\nfloat maxx = x_center + x_width/2;\nfloat miny = y_center - y_width/2;\nfloat maxy = y_center + y_width/2;\n  \nreturn smoothstep(minx, minx + blur, x) * (1 - smoothstep(maxx, maxx + blur, x)) *\n       smoothstep(miny, miny + blur, y) * (1 - smoothstep(maxy, maxy + blur, y));\n}\n\nvector uvx = point(u,v,0);\n\nfloat s_width = .148;\nfloat t_width = .222;\nfloat blur = 0.001;\nfloat backCol = .015;\n\nfloat column1 = .092;\nfloat column2 = .255;\nfloat column3 = .418;\nfloat column4 = .581;\nfloat column5 = .744;\nfloat column6 = .907;\n\nfloat row1 = .865;\nfloat row2 = .625;\nfloat row3 = .385;\nfloat row4 = .145;\n\n//dark skin\nfloat mask1 = pntInSquare(uvx[0], uvx[1], column1, row1, s_width, t_width, blur);\ncolor col1 = color(.17291,.08206,.05712);\ncolor col1aces = color(.13660,.08813,.06216);\noutput1 = mix(backCol, acesCG ? col1aces : col1 , mask1);\n\n//light skin\nfloat mask2 = pntInSquare(uvx[0], uvx[1], column2, row1, s_width, t_width, blur);\ncolor col2 = color(.56807,.29250,.21942);\ncolor col2aces = color(.45801,.31104,.23438);\noutput1 = mix(output1, acesCG ? col2aces : col2, mask2);\n\n//blue sky\nfloat mask3 = pntInSquare(uvx[0], uvx[1], column3, row1, s_width, t_width, blur);\ncolor col3 = color(.10437,.19656,.32947);\ncolor col3aces = color(.14612,.19165,.31079);\noutput1 = mix(output1, acesCG ? col3aces : col3, mask3);\n\n//foliage\nfloat mask4 = pntInSquare(uvx[0], uvx[1], column4, row1, s_width, t_width, blur);\ncolor col4 = color(.10089,.14839,.05325);\ncolor col4aces = color(.11487,.14392,.06439);\noutput1 = mix(output1, acesCG ? col4aces : col4, mask4);\n\n//blue flower\nfloat mask5 = pntInSquare(uvx[0], uvx[1], column5, row1, s_width, t_width, blur);\ncolor col5 = color(.22306,.21697,.43151);\ncolor col5aces = color(.23047,.21997,.40430);\noutput1 = mix(output1, acesCG ? col5aces : col5, mask5);\n\n//bluish green\nfloat mask6 = pntInSquare(uvx[0], uvx[1], column6, row1, s_width, t_width, blur);\ncolor col6 = color(.10718,.51351,.41399);\ncolor col6aces = color(.25977,.48389,.41846);\noutput1 = mix(output1, acesCG ? col6aces : col6, mask6);\n\n//orange\nfloat mask7 = pntInSquare(uvx[0], uvx[1], column1, row2, s_width, t_width, blur);\ncolor col7 = color(.74617,.20020,.03079);\ncolor col7aces = color(.52734,.23645,.06354);\noutput1 = mix(output1, acesCG ? col7aces : col7, mask7);\n\n//purplish blue\nfloat mask8 = pntInSquare(uvx[0], uvx[1], column2, row2, s_width, t_width, blur);\ncolor col8 = color(.05945,.10662,.39892);\ncolor col8aces = color(.09106,.10681,.36060);\noutput1 = mix(output1, acesCG ? col8aces : col8, mask8);\n\n//moderate red\nfloat mask9 = pntInSquare(uvx[0], uvx[1], column3, row2, s_width, t_width, blur);\ncolor col9 = color(.56737,.08484,.11943);\ncolor col9aces = color(.38232,.11902,.12488);\noutput1 = mix(output1, acesCG ? col9aces : col9, mask9);\n\n//purple\nfloat mask10 = pntInSquare(uvx[0], uvx[1], column4, row2, s_width, t_width, blur);\ncolor col10 = color(.11176,.04285,.14161);\ncolor col10aces = color(.08960,.04886,.13049);\noutput1 = mix(output1, acesCG ? col10aces : col10, mask10);\n\n//yellow green\nfloat mask11 = pntInSquare(uvx[0], uvx[1], column5, row2, s_width, t_width, blur);\ncolor col11 = color(.34253,.50633,.05572);\ncolor col11aces = color(.38525,.48950,.10974);\noutput1 = mix(output1, acesCG ? col11aces : col11, mask11);\n\n//orange yellow\nfloat mask12 = pntInSquare(uvx[0], uvx[1], column6, row2, s_width, t_width, blur);\ncolor col12 = color(.79252,.35813,.02546);\ncolor col12aces = color(.60938,.38452,.07666);\noutput1 = mix(output1, acesCG ? col12aces : col12, mask12);\n\n//blue\nfloat mask13 = pntInSquare(uvx[0], uvx[1], column1, row3, s_width, t_width, blur);\ncolor col13 = color(.01863,.05139,.28882);\ncolor col13aces = color(.04218,.05194,.25781);\noutput1 = mix(output1, acesCG ? col13aces : col13, mask13);\n\n//green\nfloat mask14 = pntInSquare(uvx[0], uvx[1], column2, row3, s_width, t_width, blur);\ncolor col14 = color(.05436,.29882,.07184);\ncolor col14aces = color(.13855,.27905,.09570);\noutput1 = mix(output1, acesCG ? col14aces : col14, mask14);\n\n//red\nfloat mask15 = pntInSquare(uvx[0], uvx[1], column3, row3, s_width, t_width, blur);\ncolor col15 = color(.45630,.03076,.04089);\ncolor col15aces = color(.29199,.06067,.04834);\noutput1 = mix(output1, acesCG ? col15aces : col15, mask15);\n\n//yellow\nfloat mask16 = pntInSquare(uvx[0], uvx[1], column4, row3, s_width, t_width, blur);\ncolor col16 = color(.85361,.56497,.01472);\ncolor col16aces = color(.71680,.57861,.09070);\noutput1 = mix(output1, acesCG ? col16aces : col16, mask16);\n\n//magenta\nfloat mask17 = pntInSquare(uvx[0], uvx[1], column5, row3, s_width, t_width, blur);\ncolor col17 = color(.53521,.09008,.30468);\ncolor col17aces = color(.37280,.12378,.28662);\noutput1 = mix(output1, acesCG ? col17aces : col17, mask17);\n\n//cyan\nfloat mask18 = pntInSquare(uvx[0], uvx[1], column6, row3, s_width, t_width, blur);\ncolor col18 = color(0,.25854,.39819);\ncolor col18aces = color(.08020,.22949,.37350);\noutput1 = mix(output1, acesCG ? col18aces : col18, mask18);\n\n//white\nfloat mask19 = pntInSquare(uvx[0], uvx[1], column1, row4, s_width, t_width, blur);\ncolor col19 = color(.91186,.91498,.89391);\ncolor col19aces = color(.91211,.91455,.89648);\noutput1 = mix(output1, acesCG ? col19aces : col19, mask19);\n\n//neutral 8\nfloat mask20 = pntInSquare(uvx[0], uvx[1], column2, row4, s_width, t_width, blur);\ncolor col20 = color(.57980,.59203,.59347);\ncolor col20aces = color(.58447,.59131,.59326);\noutput1 = mix(output1, acesCG ? col20aces : col20, mask20);\n\n//neutral 6.5\nfloat mask21 = pntInSquare(uvx[0], uvx[1], column3, row4, s_width, t_width, blur);\ncolor col21 = color(.35499,.36538,.36757);\ncolor col21aces = color(.35913,.36475,.36719);\noutput1 = mix(output1, acesCG ? col21aces : col21, mask21);\n\n//neutral 5\nfloat mask22 = pntInSquare(uvx[0], uvx[1], column4, row4, s_width, t_width, blur);\ncolor col22 = color(.19012,.19180,.19309);\ncolor col22aces = color(.19080,.19165,.19287);\noutput1 = mix(output1, acesCG ? col22aces : col22, mask22);\n\n//neutral 3.5\nfloat mask23 = pntInSquare(uvx[0], uvx[1], column5, row4, s_width, t_width, blur);\ncolor col23 = color(.08526,.08891,.09252);\ncolor col23aces = color(.08679,.08868,.09198);\noutput1 = mix(output1, acesCG ? col23aces : col23, mask23);\n\n//black\nfloat mask24 = pntInSquare(uvx[0], uvx[1], column6, row4, s_width, t_width, blur);\ncolor col24 = color(.03039,.03119,.03278);\ncolor col24aces = color(.03076,.03116,.03256);\noutput1 = mix(output1, acesCG ? col24aces : col24, mask24);' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( 13.1667805, -0.76539433 ) )
Gaffer.Metadata.registerValue( __children["mode"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["mode"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["mode"], 'divider', False )
Gaffer.Metadata.registerValue( __children["mode"], 'preset:rec709', 0 )
Gaffer.Metadata.registerValue( __children["mode"], 'preset:AcesCG', 1 )
__children["BoxOut"]["name"].setValue( 'color' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 24.9300098, -1.36539423 ) )
__children["BoxOut"]["in"].setInput( __children["OSLCode"]["out"]["output1"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'left' )
__children["BoxOut"]["in"]["r"].setInput( __children["OSLCode"]["out"]["output1"]["r"] )
__children["BoxOut"]["in"]["g"].setInput( __children["OSLCode"]["out"]["output1"]["g"] )
__children["BoxOut"]["in"]["b"].setInput( __children["OSLCode"]["out"]["output1"]["b"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
__children["BoxOut"]["__out"]["r"].setInput( __children["BoxOut"]["__switch"]["out"]["r"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["BoxOut"]["__out"]["g"].setInput( __children["BoxOut"]["__switch"]["out"]["g"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["BoxOut"]["__out"]["b"].setInput( __children["BoxOut"]["__switch"]["out"]["b"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'left' )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["color"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["color"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["color"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["color"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["color"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["color"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["color"], 'plugValueWidget:type', '' )
__children["color"]["r"].setInput( __children["BoxOut"]["__out"]["r"] )
Gaffer.Metadata.registerValue( __children["color"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["color"]["g"].setInput( __children["BoxOut"]["__out"]["g"] )
Gaffer.Metadata.registerValue( __children["color"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["color"]["b"].setInput( __children["BoxOut"]["__out"]["b"] )
Gaffer.Metadata.registerValue( __children["color"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( parent, 'icon', os.path.expandvars( '${GAFFER_ROOT}/resources/references/macbethTexture.png' ) )
Gaffer.Metadata.registerValue( parent, 'nodeGadget:color', imath.Color3f( 0.5, 0.25, 0.25 ) )


del __children

